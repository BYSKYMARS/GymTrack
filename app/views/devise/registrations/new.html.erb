<h2>Sign up</h2>

<%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { class: "needs-validation", novalidate: true }) do |f| %>
  <%= render "devise/shared/error_messages", resource: resource %>

  <div class="mb-3">
    <%= f.label :name, class: "form-label" %>
    <%= f.text_field :name, autofocus: true, class: "form-control", required: true %>
    <div class="invalid-feedback">
      Por favor ingresa tu nombre.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :email, class: "form-label" %>
    <%= f.email_field :email, autocomplete: "email", class: "form-control", required: true %>
    <div class="invalid-feedback">
      Por favor ingresa un correo v치lido.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :password, class: "form-label" %>
    <% if @minimum_password_length %>
      <em class="form-text text-muted">(<%= @minimum_password_length %> characters minimum)</em>
    <% end %>
    <%= f.password_field :password, autocomplete: "new-password", class: "form-control", required: true, minlength: @minimum_password_length %>
    <div class="invalid-feedback">
      Por favor ingresa una contrase침a v치lida.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :password_confirmation, class: "form-label" %>
    <%= f.password_field :password_confirmation, autocomplete: "new-password", class: "form-control", required: true %>
    <div class="invalid-feedback">
      Por favor confirma tu contrase침a.
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :plan_id, "Selecciona un Plan", class: "form-label" %>
    <%= f.collection_select :plan_id, Plan.all, :id, :name, { prompt: "Elige un plan" }, { class: "form-select", required: true } %>
    <div class="invalid-feedback">
      Por favor selecciona un plan.
    </div>
  </div>

  <div>
    <%= f.submit "Sign up", class: "btn btn-primary" %>
  </div>
<% end %>

<%= render "devise/shared/links" %>

<script>
  // Bootstrap client-side validation
  (() => {
    'use strict'
    const forms = document.querySelectorAll('.needs-validation')
    Array.from(forms).forEach(form => {
      form.addEventListener('submit', event => {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagation()
        }
        form.classList.add('was-validated')
      }, false)
    })
  })()
</script>
